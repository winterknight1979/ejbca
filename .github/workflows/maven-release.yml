# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Maven Release 

on:
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest
    

    steps:
    - uses: actions/checkout@v2
    - run: git config --global user.name "GitHub Actions" && git config --global user.email "actions@users.noreply.github.com"
    - run: echo 'APPSRV_HOME=~' >> $GITHUB_ENV

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    
     # We always want to build the whole project, even if some unit tests fail
    # We therefore run Maven with -fn and grep the log file for the failure message to set the exit status.
    - name: Build packages with Maven
      run: mvn -B package -Pcoverage -Pjboss -fn --file pom.xml | tee build.log
    - name: Check for build fail
      run: test `grep -L "There are test failures" build.log`
      
    
    - name: Publish test results
      uses: scacap/action-surefire-report@v1
      if: always()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Publish coverage results
      uses: codecov/codecov-action@v1
      if: always()
   
    - name: Build Reports
      run: mvn -Pcoverage -Pjboss -B site site:stage --file pom.xml
        #    - uses: jwgmeligmeyling/checkstyle-github-action@master
        #  with:
        #  path: '**/checkstyle-result.xml'
    - uses: jwgmeligmeyling/spotbugs-github-action@master
      with:
        path: '**/spotbugsXml.xml'
    - uses: jwgmeligmeyling/pmd-github-action@master
      with:
        path: '**/pmd.xml'


    - name: Deploy reports to github.io
      env:
        PASS: ${{ secrets.REPO_PASS }}
      run: mvn -B -Dusername=winterknight1979 -Dpassword=$PASS -Pjboss scm-publish:publish-scm --file pom.xml
      
    - name: Publish snapshot to GitHub Packages Apache Maven
      run: mvn -B deploy -Pjboss -DskipTests=true -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}
        
    - name: Publish EAR
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: ejbca-ear
        path: ejbca-ear/target/*.ear

    - name: Publish ws-cli
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: ejbca-ws-cli
        path: ejbca-ws-cli/target/*executable.jar

    - name: Publish ejb-cli
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: ejbca-ejb-cli
        path: ejbca-ejb-cli/target/*executable.jar

       
  
