# This workflow checks out code, performs a Codacy security scan
# and integrates the results with the
# GitHub Advanced Security code scanning feature.  For more information on
# the Codacy security scan action usage and parameters, see
# https://github.com/codacy/codacy-analysis-cli-action.
# For more information on Codacy Analysis CLI in general, see
# https://github.com/codacy/codacy-analysis-cli.

name: Codacy Security Scan (Remote)

on: 
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "master", "main" ]

jobs:
  codacy-security-scan:
    name: Codacy Security Scan
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout code
        uses: actions/checkout@v2
     
      - name: Setup JDK11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: cleanup working tree
        run: |
               git config --global user.name "GitHub Actions" && git config --global user.email "actions@users.noreply.github.com"
               git add settings.xml 
               git commit -am 'cleanup'
      - name: setup env
        run: echo 'APPSRV_HOME=~' >> $GITHUB_ENV 
      - name: Build
        run: mvn -fn -B -Pjboss -DskipTests=true clean verify
     

      #We want to run and upload spotbugs results BEFORE we generate the SARIF file
      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@master
        with:
          # Check https://github.com/codacy/codacy-analysis-cli#project-token to get your project token from your Codacy repository
          # You can also omit the token and run the tools that support default configurations   
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          #tool: spotbugs
          verbose: true
          upload: true
          allow-network: true
          # Force 0 exit code to allow SARIF file generation
          # This will handover control about PR rejection to the GitHub side
          max-allowed-issues: 2147483647
      
   
